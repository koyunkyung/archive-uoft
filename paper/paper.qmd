---
title: "Disease Outbreaks in Toronto Healthcare Institutions"
subtitle: "Analysis of Outbreak Patterns Based on Its Type and Settings"
author: 
  - Yunkyung Ko
thanks: "Code and data are available at: https://github.com/koyunkyung/toronto_outbreaks"
date: today
date-format: long
abstract: "(specify the general area of the paper and encourage the reader) (specify the dataset and methods at a general level) (specify headline result). (implications)."
format: pdf
number-sections: true
bibliography: references.bib
toc: true
toc-title: "Table of Contents"
toc-depth: 2
toc-location: left
---


```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(opendatatoronto)
library(ggplot2)
library(dplyr)
library(readr)
library(lubridate)

raw_data <- read_csv(here::here("data/raw_data/raw_data.csv"))
data <- read_csv(here::here("data/analysis_data/analysis_data.csv"))

```


# Introduction

As of September 9 2024, 1,016 infections of pertussis, a contagious respiratory disease also known as whopping cough, were reported in Ontario [@nowtoronto_whooping_cough]. In all of Toronto, the figure is more than triple the five-year, pre-pandemic average of 31 cases for the same period [@publichealth_ontario].

Unexpected disease outbreaks significantly disrupt society by inducing widespread fear, anxiety, and economic losses [@frontiers_outbreaks]. Especially in Canada, where people continue to face some of the longest medical wait times for treatment in the developed world [@torontosun_wait_times], costs are likely to increase exponentially in an instant. Before Toronto overspends the cost of medical care, this paper is intending to analyze the trends of outbreaks reported in Toronto healthcare institutions. 

(high-level results, focuesd on the one key result that is the main part of the story)
(broadly discuss next steps in a sentence or two)

The paper starts with analyzing the overall pattern of outbreak occurrence frequency over the time period of 2016 to 2024. Then, it sorts the outbreaks into two different types, respiratory and enteric, to reiterate the analysis of outbreak frequency patterns. Diving deeper into the analysis, outbreak settings would also come into consideration. Finally, discussions about how specific healthcare institutions should reallocate their resources for particular outbreak types would proceed.


# Data

## Data Overview

(after clearly describing the dataset, use tables to display relevant cross-tabs and graphs to contrast groups)
(thoroughly discuss the variables in the dataset we are using. graph the analysis data and table for summary stats)

The 'Outbreaks in Toronto Healthcare Institutions' dataset [@toronto_outbreaks_dataset], obtained from City of Toronto Open Data Portal, was used for the trend analysis of outbreak occurrence. Published by Toronto Public Health under the requirement to monitor symptoms of infections, this dataset contains reports of suspected and confirmed outbreaks of gastroenteric (e.g., nausea, vomiting, diarrhea, fever) and respiratory (e.g., cough, runny nose, sore throat, fever) illness. An outbreak is defined as a localized increase in the rate of infection or illness, above that which is expected. Please note that this dataset was last updated on September 24, 2024, and contains only the information up to then.

In this paper, R for statistical computing [@R] is used to handle data. In particular, packages like `tidyverse` [@tidyverse], `ggplot2` [@ggplot2], `dplyr` [@dplyr], `readr` [@readr], `lubridate` [@lubridate] were utilized to analyze data from the City of Toronto [@opendatatoronto]. Data from year 2016 to 2024 were combined, and several variables were removed in the filtering process for analysis data. 


## Results

```{r}
#| label: fig-outbreak
#| fig-cap: Total Outbreaks Count in Toronto Healthcare Institutions
#| echo: false

data |>
  ggplot(mapping = aes(x = year)) +
  geom_bar() +
  theme_minimal() +
  labs(x = "Date Period", y = "Number of Outbreaks Reported",
       title = "Total Outbreak Counts Reported in Toronto Healthcare Institutions") +
  scale_x_continuous(breaks = seq(min(data$year), max(data$year), by = 1))

```

```{r}
#| label: fig-setting
#| fig-cap: Outbreaks Count by Outbreak Settings
#| echo: false

library(dplyr)
library(ggplot2)

outbreak_counts <- data %>%
  count(outbreak_setting)

ggplot(outbreak_counts, aes(x = "", y = n, fill = outbreak_setting)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y", start = 0) + 
  theme_minimal() +
  scale_fill_manual(values = c("LTCH" = "#B4E1FF", 
                               "Retirement Home" = "#B3FFC6", 
                               "Hospital-Chronic Care" = "#BA55D3", 
                               "Hospital-Acute Care" = "#DDA0DD",
                               "Hospital-Psychiatric" = "grey",
                               "Shelter" = "brown",
                               "Transitional Care" = "black")) +
  labs(x = NULL, y = NULL, fill = "Outbreak Setting", 
       title = "Number of Outbreaks Reported by Setting") +
  theme(axis.text.x = element_blank(),  
        axis.ticks = element_blank(),  
        panel.grid = element_blank())  
```







```{r}

```

```{r}
#| label: fig-outbreaks count by types
#| fig-cap: Outbreaks Count in Toronto Healthcare Institutions, by Types of Outbreak
#| echo: false
#| warning: false
#| message: false

# Summarizing the data to get the number of outbreaks per month and type of outbreak
annual_data <- data %>%
  group_by(year, type_of_outbreak) %>%
  summarise(outbreak_count = n()) %>%
  ungroup()

# Convert the year column to a factor with levels in chronological order
annual_data$year <- factor(annual_data$year, levels = unique(annual_data$year))

# Create the line plot
ggplot(annual_data, aes(x = year, y = outbreak_count, group = type_of_outbreak, color = type_of_outbreak)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  scale_color_manual(values = c("Respiratory" = "red", "Enteric" = "blue", "Other" = "black")) +
  labs(title = "Trend of Outbreak Counts by Type (2016-2024)",
       x = "Year", y = "Outbreak Count", color = "Type of Outbreak") +
  theme_minimal() +
  scale_x_discrete(drop = FALSE) # Ensure all years are shown on the x-axis

```

```{r}
#| label: fig-respiratory outbreaks count by outbreak settings
#| fig-cap: Respiratory Outbreaks Count, by Outbreak Settings
#| echo: false
#| warning: false
#| message: false

library(dplyr)
library(ggplot2)

# Filter for 'Respiratory' outbreaks
respiratory_data <- data %>%
  filter(type_of_outbreak == "Respiratory")

# Aggregate data by year and outbreak setting
annual_counts <- respiratory_data %>%
  group_by(year, outbreak_setting) %>%
  summarise(outbreak_count = n(), .groups = 'drop')

# Create a stacked bar plot
ggplot(annual_counts, aes(x = year, y = outbreak_count, fill = outbreak_setting)) +
  geom_col(position = "stack") +  # Stack bars based on outbreak settings
  scale_fill_manual(values = c("LTCH" = "#B4E1FF", 
                               "Retirement Home" = "#B3FFC6", 
                               "Hospital-Chronic Care" = "#BA55D3", 
                               "Hospital-Acute Care" = "#DDA0DD",
                               "Hospital-Psychiatric" = "grey",
                               "Shelter" = "brown",
                               "Transitional Care" = "black")) +
  labs(title = "Annual Respiratory Outbreak Counts by Setting",
       x = "Year",
       y = "Outbreak Count",
       fill = "Outbreak Setting") +
  theme_minimal() +
  scale_x_continuous(breaks = seq(min(data$year), max(data$year), by = 1))
```


```{r}
#| label: fig-enteric outbreaks count by outbreak settings
#| fig-cap: Enteric Outbreaks Count, by Outbreak Settings
#| echo: false
#| warning: false
#| message: false

library(dplyr)
library(ggplot2)

# Filter for 'Enteric' outbreaks
enteric_data <- data %>%
  filter(type_of_outbreak == "Enteric")

# Aggregate data by year and outbreak setting
annual_counts <- enteric_data %>%
  group_by(year, outbreak_setting) %>%
  summarise(outbreak_count = n(), .groups = 'drop')

# Create a stacked bar plot
ggplot(annual_counts, aes(x = year, y = outbreak_count, fill = outbreak_setting)) +
  geom_col(position = "stack") +  # Stack bars based on outbreak settings
  scale_fill_manual(values = c("LTCH" = "#B4E1FF", 
                               "Retirement Home" = "#B3FFC6", 
                               "Hospital-Chronic Care" = "#BA55D3", 
                               "Hospital-Acute Care" = "#DDA0DD",
                               "Hospital-Psychiatric" = "grey",
                               "Shelter" = "brown",
                               "Transitional Care" = "black")) +
  labs(title = "Annual Enteric Outbreak Counts by Setting",
       x = "Year",
       y = "Outbreak Count",
       fill = "Outbreak Setting") +
  theme_minimal() +
  scale_x_continuous(breaks = seq(min(data$year), max(data$year), by = 1))
```
Talk way more about it. 


# Discussion

(brief summary of what was done in the paper)

## First discussion point 

analyze the total outbreak frequency trend over the time period given.
(in relation to the social/political background in healthcare)

## Second discussion point

figure out what might be the main causative agent for the rapid increase in outbreak reports starting from 2022.
acknowledging the causative agent that we should be aware of might help us prevent further outbreak increase from happening
-> know what is causing this rise in outbreak reports and research about that specific disease settings

## Third discussion point

from the results of the data analysis above, discuss a way we could prevent further increase of outbreak occurrence.
in largely three dimensions: personal/ society/ government

## Weaknesses and next steps

Dividing a year into just two could influence the analysis result. (ex. weather affecting the outbreak occurrence)
Many 'N/A', 'Unable to identify' data in Causative Agent.

For further inspection, taking the place information in consideration might also have been meaningful.


\newpage

\appendix

# Appendix {-}

# Additional data details

## Other Similar Datasets

## Raw Data Variables Overview


\newpage


# References

